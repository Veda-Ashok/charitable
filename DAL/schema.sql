CREATE TABLE organization (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR,
    mission VARCHAR,
    logo_url VARCHAR,
    url VARCHAR,
    gg_id INT
);

CREATE TABLE member (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    member_name VARCHAR,
    display_name VARCHAR,
    profile_picture BYTEA,
    banner_picture BYTEA,
    bio VARCHAR
);

CREATE TABLE activity (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    organization_id INT REFERENCES organization(id),
    street_address VARCHAR,
    member_id INT REFERENCES member(id),
    description VARCHAR,
    city VARCHAR,
    url VARCHAR,
    zipcode VARCHAR
);

CREATE TABLE post (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    member_id INT REFERENCES member(id),
    time TIMESTAMP,
    typed_content VARCHAR,
    attached_image BYTEA,
    organization_id INT REFERENCES organization(id),
    activity_id INT REFERENCES activity(id)
);

CREATE TABLE country (
    country_code VARCHAR PRIMARY KEY,
    name VARCHAR
);
  
CREATE TABLE theme (
    id VARCHAR PRIMARY KEY,
    name VARCHAR
);
  
CREATE TABLE organization_country (
    organization_id INT REFERENCES organization(id),
    country_code VARCHAR REFERENCES country(country_code)
);

CREATE TABLE member_organization (
    member_id INT REFERENCES member(id),
    organization_id INT REFERENCES organization(id)
);

CREATE TABLE member_member (
    member1_id INT REFERENCES member(id),
    member2_id INT REFERENCES member(id)
    friend_status ENUM('0', '1'), -- 0= pending request, 1 = accepted request
    PRIMARY KEY(member1_id, member2_id)
-- StackOverflow: https://stackoverflow.com/questions/379236/database-design-best-table-structure-for-capturing-the-user-friend-relationship
-- pending_first_second
-- pending_second_first
-- friends
-- block_first_second // probably are not going to deal with blocks for our app
-- block_second_first
-- block_both
);

CREATE TABLE activity_theme (
    activity_id INT REFERENCES activity(id),
    theme_id VARCHAR REFERENCES theme(id)
);

CREATE TABLE activity_country (
    activity_id INT REFERENCES activity(id),
    country_code VARCHAR REFERENCES country(country_code)
);
    
CREATE TABLE organization_theme (
    organization_id INT REFERENCES organization(id),
    theme_id VARCHAR REFERENCES theme(id)
);